#include <bits/stdc++.h>
using namespace std;

void merge(vector<int> &a, int s, int e){
    int mid = s + (e - s) / 2;

    int len1 = mid - s + 1;
    int len2 = e - mid;

    int *first = new int[len1];
    int *second = new int[len2];

    int ind = s;
    for (int i = 0; i < len1; i++) {
        first[i] = a[ind++];
    }
    ind = mid + 1;
    for (int i = 0; i < len2; i++) {
        second[i] = a[ind++];
    }

    int index1 = 0;
    int index2 = 0;
    ind = s;

    while (index1 < len1 && index2 < len2) {
        if (first[index1] < second[index2]) {
            a[ind++] = first[index1++];
        } else {
            a[ind++] = second[index2++];
        }
    }

    while (index1 < len1) {
        a[ind++] = first[index1++];
    }
    while (index2 < len2) {
        a[ind++] = second[index2++];
    }

    delete[] first;
    delete[] second;
}

void mergeSort(vector<int> &a, int s, int e) {
    if (s >= e) {
        return;
    }
    int mid = s + (e - s) / 2;
    mergeSort(a, s, mid);
    mergeSort(a, mid + 1, e);
    merge(a, s, e);
}

int main() {
    int n;
    cin >> n;
    vector<int> a(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }
    mergeSort(a, 0, n - 1);
    for (int i = 0; i < n; i++) {
        cout << a[i] << " ";
    }
    cout << endl;
}
