#include <bits/stdc++.h>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;

    vector<vector<pair<int, int>>> adj(n);
    for (int i = 0; i < m; i++) {
        int u, v, w;
        cin >> u >> v >> w;
        adj[u].push_back({v, w});
        adj[v].push_back({u, w});
    }
    auto dijkstra = [&](int src, vector<int> &dist) {
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        dist[src] = 0;
        pq.push({0, src}); 
        while (!pq.empty()) {
            int d = pq.top().first;
            int u = pq.top().second;
            pq.pop();

            if (d > dist[u]) continue; 
            for (auto &it : adj[u]) {
                int v = it.first, w = it.second;
                if (dist[u] + w < dist[v]) {
                    dist[v] = dist[u] + w;
                    pq.push({dist[v], v});
                }
            }
        }
    };

    vector<int> dist1(n, INT_MAX), dist2(n, INT_MAX);
    dijkstra(0, dist1);
    dijkstra(4, dist2);
    int ans = dist1[4];
    vector<int> res;
    for(int i = 0; i < dist1.size();i++){
      if(dist1[i]+dist2[i] == ans){
        res.push_back(i);
      }
    }
    for(auto &it:res){
      cout << it << " ";
    }
    return 0;
}
